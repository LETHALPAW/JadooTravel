@*
    _DefaultAIViewComponentPartial
*@
<section class="pt-6">
    <div class="container text-center">
        <h2 class="mb-4 fw-bold text-primary">@ViewData["Title"]</h2>

        <div class="input-group w-75 mx-auto">
            <input type="text" id="ai-location" class="form-control form-control-lg" placeholder="@ViewData["Placeholder"]" />
            <button id="btnGetAI" class="btn btn-primary btn-lg">@ViewData["ButtonText"]</button>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="aiModal" tabindex="-1">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content p-4 shadow-lg border-0 rounded-4">
                <div class="modal-header border-0">
                    <h5 class="modal-title fw-bold text-secondary">🌍 @ViewData["ModalTitle"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@ViewData["CloseText"]"></button>
                </div>
                <div class="modal-body text-start">
                    <div id="aiResult" class="p-3 border rounded bg-light">
                        <p class="text-muted">@ViewData["ResultPlaceholder"]</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.getElementById("btnGetAI").addEventListener("click", async function () {
        const location = document.getElementById("ai-location").value.trim();

        if (!location) {
            alert("⚠️ @ViewData["ValidationText"]");
            return;
        }

        const aiModal = new bootstrap.Modal(document.getElementById("aiModal"));
        aiModal.show();

        const aiResult = document.getElementById("aiResult");
        aiResult.innerHTML = `
            <div class="text-center">
                <div class="spinner-border text-primary" role="status"></div>
                <p class="mt-3">@ViewData["LoadingText"]</p>
            </div>
        `;

        try {
            const response = await fetch('/AI/GetAIRecommendation', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'location=' + encodeURIComponent(location)
            });

            const text = await response.text();

            let data;
            try {
                data = JSON.parse(text);
            } catch {
                console.error("JSON parse hatası:", text);
                aiResult.innerHTML = `<p class="text-danger">❌ Sunucudan geçerli bir JSON yanıt alınamadı.</p>`;
                return;
            }

            if (data.success) {
                aiResult.innerHTML = `
                    <div class="text-center">
                        ${data.image
                            ? `<img src="${data.image}" class="img-fluid rounded shadow mb-3" alt="${location}" style="max-height:400px; object-fit:cover;" />`
                            : ""
                        }
                        <pre class="text-start" style="white-space: pre-wrap;">${data.text}</pre>
                    </div>
                `;
            } else {
                aiResult.innerHTML = `<p class="text-danger">${data.message}</p>`;
            }
        } catch (err) {
            aiResult.innerHTML = `<p class="text-danger">❌ Bir hata oluştu: ${err.message}</p>`;
        }
    });
</script>
